[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test discovery and collection
norecursedirs = .git .venv venv env build dist *.egg-info
addopts = 
    --verbose
    --strict-markers
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-branch
    --no-cov-on-fail
    --cov-fail-under=80
    --maxfail=1
    --showlocals
    --durations=10

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    api: API tests
    models: Database model tests
    auth: Authentication tests
    slow: Tests that take longer to run

# Environment variables for testing
env =
    FLASK_ENV=testing
    TESTING=true
    SECRET_KEY=test-secret-key
    SQLALCHEMY_DATABASE_URI=sqlite:///test.db
    SQLALCHEMY_TRACK_MODIFICATIONS=false
    WTF_CSRF_ENABLED=false
    CLIENT_ID=test-client-id
    CLIENT_SECRET=test-client-secret
    AUTHORITY=https://login.microsoftonline.com/test-tenant-id
    SCOPE=test-scope

# Logging configuration
log_cli = true
log_cli_level = DEBUG
log_cli_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_file = logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)
log_file_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
branch = True
source = src
omit =
    src/migrations/*
    src/tests/*
    src/config.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:
    raise AssertionError

[coverage:html]
directory = htmlcov
title = Inventory App Test Coverage Report

# Flake8 configuration for test files
[flake8]
max-line-length = 100
exclude = .git,__pycache__,build,dist,*.egg-info
per-file-ignores = 
    tests/*:E501,F401,F403,F405
    conftest.py:F401,F403
