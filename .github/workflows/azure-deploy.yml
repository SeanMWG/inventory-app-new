name: Deploy to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: inventory-app
  PYTHON_VERSION: '3.11'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
        
    - name: Setup test environment
      run: |
        mkdir -p instance
        chmod 777 instance
        touch instance/test.db
        chmod 666 instance/test.db
        python -c "import os; os.makedirs('logs', exist_ok=True)"
        
    - name: Run tests with debug output
      env:
        FLASK_ENV: testing
        TESTING: true
        SECRET_KEY: test-secret-key
        SQLALCHEMY_DATABASE_URI: sqlite:///test.db
        SQLALCHEMY_TRACK_MODIFICATIONS: false
        WTF_CSRF_ENABLED: false
        CLIENT_ID: test-client-id
        CLIENT_SECRET: test-client-secret
        AUTHORITY: https://login.microsoftonline.com/test-tenant-id
        SCOPE: test-scope
        PYTHONPATH: .
      run: |
        echo "Running tests with verbose output..."
        python -m pytest -v --log-cli-level=DEBUG
        
    - name: Upload test logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs
        path: |
          logs/
          .pytest_cache/
          htmlcov/
        retention-days: 7

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
        
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: .
